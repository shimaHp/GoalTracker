@using Blazored.Toast.Configuration
@using Microsoft.AspNetCore.Components.Authorization

@using Blazored.Toast
<Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>
    <link href="_content/Blazored.Toast/blazored-toast.min.css" rel="stylesheet" />

    <!-- Add the BlazoredToasts component here -->
    <BlazoredToasts Position="ToastPosition.TopRight"
                    Timeout="5"
                    IconType="IconType.FontAwesome"
                    SuccessClass="success-toast"
                    ErrorClass="error-toast" />

    <Router AppAssembly="@typeof(App).Assembly">
        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)">
                <NotAuthorized>
                    @if (context.User?.Identity?.IsAuthenticated == false)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <PageTitle>Not Authorized</PageTitle>
                        <LayoutView Layout="@typeof(MainLayout)">
                            <p role="alert">Sorry, You are not authorized to access this resource.</p>
                        </LayoutView>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
            <FocusOnNavigate RouteData="@routeData" Selector="h1" />
        </Found>
        <NotFound>
            <PageTitle>Not found</PageTitle>
            <LayoutView Layout="@typeof(MainLayout)">
                <p role="alert">Sorry, there's nothing at this address.</p>
            </LayoutView>
        </NotFound>
    </Router>
</Microsoft.AspNetCore.Components.Authorization.CascadingAuthenticationState>